/*
 * Assembly API
 *
 * Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@assemblypayments.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DisbursementsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DisbursementsApiTests : IDisposable
    {
        private DisbursementsApi instance;

        public DisbursementsApiTests()
        {
            instance = new DisbursementsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DisbursementsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DisbursementsApi
            //Assert.IsType<DisbursementsApi>(instance);
        }

        /// <summary>
        /// Test ListDisbursement
        /// </summary>
        [Fact]
        public void ListDisbursementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //string batchId = null;
            //var response = instance.ListDisbursement(limit, offset, batchId);
            //Assert.IsType<Disbursements>(response);
        }

        /// <summary>
        /// Test ShowDisbursement
        /// </summary>
        [Fact]
        public void ShowDisbursementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ShowDisbursement(id);
            //Assert.IsType<SingleDisbursement>(response);
        }

        /// <summary>
        /// Test ShowDisbursementBankAccounts
        /// </summary>
        [Fact]
        public void ShowDisbursementBankAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ShowDisbursementBankAccounts(id);
            //Assert.IsType<BankAccount>(response);
        }

        /// <summary>
        /// Test ShowDisbursementItems
        /// </summary>
        [Fact]
        public void ShowDisbursementItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ShowDisbursementItems(id);
            //Assert.IsType<Items>(response);
        }

        /// <summary>
        /// Test ShowDisbursementTransactions
        /// </summary>
        [Fact]
        public void ShowDisbursementTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.ShowDisbursementTransactions(id, limit, offset);
            //Assert.IsType<Transactions>(response);
        }

        /// <summary>
        /// Test ShowDisbursementUsers
        /// </summary>
        [Fact]
        public void ShowDisbursementUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ShowDisbursementUsers(id);
            //Assert.IsType<SingleUser>(response);
        }

        /// <summary>
        /// Test ShowDisbursementWalletAccounts
        /// </summary>
        [Fact]
        public void ShowDisbursementWalletAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ShowDisbursementWalletAccounts(id);
            //Assert.IsType<WalletAccount>(response);
        }
    }
}
