/*
 * Assembly API
 *
 * Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@assemblypayments.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;

namespace AssemblyPay.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing TokensResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TokensResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TokensResponse
        //private TokensResponse instance;

        public TokensResponseTests()
        {
            // TODO uncomment below to create an instance of TokensResponse
            //instance = new TokensResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TokensResponse
        /// </summary>
        [Fact]
        public void TokensResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" TokensResponse
            //Assert.IsType<TokensResponse>(instance);
        }


        /// <summary>
        /// Test the property 'AccessToken'
        /// </summary>
        [Fact]
        public void AccessTokenTest()
        {
            // TODO unit test for the property 'AccessToken'
        }
        /// <summary>
        /// Test the property 'ExpiresIn'
        /// </summary>
        [Fact]
        public void ExpiresInTest()
        {
            // TODO unit test for the property 'ExpiresIn'
        }
        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }

    }

}
